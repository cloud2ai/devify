# Generated by Django 5.1.4 on 2025-08-01 12:24

import uuid
import os
from django.db import migrations


def generate_safe_filenames(apps, schema_editor):
    """
    Generate UUID-based safe filenames for existing EmailAttachment records.
    """
    EmailAttachment = apps.get_model('threadline', 'EmailAttachment')

    # Get all attachments that don't have safe_filename
    attachments = EmailAttachment.objects.filter(safe_filename__isnull=True)

    print(f"Found {attachments.count()} attachments to update with safe filenames")

    for attachment in attachments:
        # Generate UUID-based filename
        file_uuid = str(uuid.uuid4())
        file_extension = os.path.splitext(attachment.filename)[1] if attachment.filename else ''
        safe_filename = f"{file_uuid}{file_extension}"

        # Update the record
        attachment.safe_filename = safe_filename
        attachment.save()

        print(f"Updated attachment {attachment.filename} -> {safe_filename}")


def reverse_generate_safe_filenames(apps, schema_editor):
    """
    Reverse operation - clear safe_filename field.
    """
    EmailAttachment = apps.get_model('threadline', 'EmailAttachment')
    EmailAttachment.objects.all().update(safe_filename=None)


class Migration(migrations.Migration):

    dependencies = [
        ('threadline', '0003_emailattachment_safe_filename_and_more'),
    ]

    operations = [
        migrations.RunPython(
            generate_safe_filenames,
            reverse_generate_safe_filenames
        ),
    ]
