# Generated by Django 5.1.4 on 2025-01-XX

import uuid
from django.db import migrations


def repopulate_missing_uuids(apps, schema_editor):
    """
    Repopulate UUID fields for records that don't have one.
    This ensures all EmailMessage and EmailAttachment records have UUIDs.
    """
    EmailMessage = apps.get_model('threadline', 'EmailMessage')
    EmailAttachment = apps.get_model('threadline', 'EmailAttachment')

    # Populate missing EmailMessage UUIDs
    emails_without_uuid = EmailMessage.objects.filter(uuid__isnull=True)
    for email in emails_without_uuid:
        email.uuid = uuid.uuid4()
        email.save(update_fields=['uuid'])

    # Populate missing EmailAttachment UUIDs
    attachments_without_uuid = EmailAttachment.objects.filter(uuid__isnull=True)
    for attachment in attachments_without_uuid:
        attachment.uuid = uuid.uuid4()
        attachment.save(update_fields=['uuid'])


def reverse_repopulate_uuids(apps, schema_editor):
    """
    Reverse migration: set UUIDs to null for records that match creation
    weakly track ID ranges (not recommended for production)
    """
    # Do nothing - we can't safely reverse this
    pass


class Migration(migrations.Migration):

    dependencies = [
        ('threadline', '0018_add_metadata_field'),
    ]

    operations = [
        migrations.RunPython(repopulate_missing_uuids, reverse_repopulate_uuids),
    ]
