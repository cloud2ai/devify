# Generated by Django 5.1.4 on 2025-08-20 00:25

from django.db import migrations, models


def update_status_to_fetched(apps, schema_editor):
    """
    Update existing statuses to use the new unified FETCHED status:
    - EmailMessage: pending -> fetched (if any)
    - EmailAttachment: pending -> fetched (if any)
    """
    EmailMessage = apps.get_model('threadline', 'EmailMessage')
    EmailAttachment = apps.get_model('threadline', 'EmailAttachment')

    # Update email statuses
    email_updated = EmailMessage.objects.filter(status='pending').update(status='fetched')
    print(f"Updated {email_updated} email statuses: PENDING -> FETCHED")

    # Update attachment statuses (pending, ready, or ocr_processing -> fetched)
    attachment_pending = EmailAttachment.objects.filter(status='pending').update(status='fetched')
    attachment_ready = EmailAttachment.objects.filter(status='ready').update(status='fetched')
    attachment_ocr_processing = EmailAttachment.objects.filter(status='ocr_processing').update(status='fetched')

    total_attachments = attachment_pending + attachment_ready + attachment_ocr_processing
    print(f"Updated {total_attachments} attachment statuses to FETCHED")


def reverse_update_status_to_fetched(apps, schema_editor):
    """Reverse migration - reset statuses to pending"""
    EmailMessage = apps.get_model('threadline', 'EmailMessage')
    EmailAttachment = apps.get_model('threadline', 'EmailAttachment')

    # Only reset emails that were originally pending
    EmailMessage.objects.filter(status='fetched').update(status='pending')

    # Reset attachments to pending (as they would have been originally)
    EmailAttachment.objects.filter(status='fetched').update(status='pending')


class Migration(migrations.Migration):

    dependencies = [
        ('threadline', '0010_simplify_attachment_status_machine'),
    ]

    operations = [
        # First, run the data migration to update existing statuses
        migrations.RunPython(
            update_status_to_fetched,
            reverse_update_status_to_fetched
        ),
        # Then alter the field definitions
        migrations.AlterField(
            model_name='emailattachment',
            name='status',
            field=models.CharField(choices=[('fetched', 'Fetched'), ('ocr_processing', 'OCR Processing'), ('ocr_success', 'OCR Success'), ('ocr_failed', 'OCR Failed'), ('llm_processing', 'LLM Processing'), ('llm_success', 'LLM Success'), ('llm_failed', 'LLM Failed')], db_index=True, default='fetched', max_length=32, verbose_name='Processing Status'),
        ),
        migrations.AlterField(
            model_name='emailmessage',
            name='status',
            field=models.CharField(choices=[('fetched', 'Fetched'), ('ocr_processing', 'OCR Processing'), ('ocr_failed', 'OCR Failed'), ('ocr_success', 'OCR Success'), ('summary_processing', 'Summary Processing'), ('summary_failed', 'Summary Failed'), ('summary_success', 'Summary Success'), ('jira_processing', 'JIRA Processing'), ('jira_failed', 'JIRA Failed'), ('jira_success', 'JIRA Success')], db_index=True, default='fetched', max_length=32, verbose_name='Processing Status'),
        ),
    ]
