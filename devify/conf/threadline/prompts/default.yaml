# Default prompts and shared snippets
# Shared snippets can be referenced in prompts using {variable_name}

shared:
  zh-CN:
    image_placeholder: "[IMAGE: filename.png]"
    output_requirements: "对话文本必须为纯文本（不包括表情符号、特殊字符等），结构清晰。不改变任何原始含义并保留所有信息。输出必须是结构良好、层次清晰的纯文本，不包含任何额外的解释、摘要或多余内容。"
    content_processing: "完全保留和描述所有内容，不遗漏任何信息。必要时使用Markdown格式处理代码或引用内容（例如，``` 用于代码块，> 用于引用）。"

  en-US:
    image_placeholder: "[IMAGE: filename.png]"
    output_requirements: "Conversation text must be plain text (excluding emojis, special characters, etc.) with clear structure. Without altering any original meaning and retaining all information. Output must be well-structured, hierarchically clear plain text, without any additional explanations, summaries, or extra content."
    content_processing: "Fully retain and describe all content without omission. Using Markdown formatting when necessary for code or quoted content (e.g., ``` for code blocks, > for quotes)."

  es:
    image_placeholder: "[IMAGE: filename.png]"
    output_requirements: "El texto de la conversación debe ser texto plano (excluyendo emojis, caracteres especiales, etc.) con estructura clara. Sin alterar ningún significado original y conservando toda la información. La salida debe ser texto plano bien estructurado y jerárquicamente claro, sin explicaciones adicionales, resúmenes o contenido extra."
    content_processing: "Conservar y describir completamente todo el contenido sin omisiones. Usar formato Markdown cuando sea necesario para código o contenido citado (por ejemplo, ``` para bloques de código, > para citas)."

# Common prompts (language-agnostic)
# These prompts are used for all languages and use {language} variable for output language control
common:
  email_content_prompt: |
    Please output in {language}.

    Your task is to organize the provided content — which may include email threads, chat logs, or message exchanges — into a standardized Markdown-formatted conversation for archival and easy reference.
    Ensure the output preserves all original information while presenting it in a clean, consistent, and chronological structure (from the earliest to the latest).
    Apply minimal editing only to improve readability, and clearly mark any assumptions.

    Output Format (Markdown):

    Each message must strictly follow this format:

    - Speaker (Date Time)
    Message content

    Additional rules:

    Date and Time
    - If the date is unknown, display only the time.
    - If known, include both date and time in a consistent format (e.g., 2025-10-22 14:05).

    Images
    - Use placeholders in the format [IMAGE: filename.png], placed on a separate line in their original position.

    Plain Text Only
    - The conversation must contain plain text only (no emojis, markdown decorations, or special characters).

    No Additional Commentary
    - Do not include explanations, analysis, or summaries outside of the formatted conversation.

  ocr_prompt: |
    Please output in {language}.

    Your task is to CLEAN and ORGANIZE OCR-recognized content, making it more readable and well-structured while remaining faithful to the original OCR text. DO NOT add interpretations, explanations, or extra information beyond what is present in the OCR results.

    Task Objectives:

    Complete Information Preservation
    - Include ALL OCR content regardless of whether it seems relevant or not.
    - Do NOT filter out any text based on relevance judgment.
    - Describe everything visible in the screenshot: titles, menus, toolbars, status bars, buttons, labels, etc.
    - Even if some content appears to be UI elements or seems unrelated, still include it in your output.
    - Keep all numbers, codes, timestamps, and identifiers exactly as they appear.

    Clean and Organize OCR Text
    - Correct obvious OCR errors (e.g., "1" → "I", "rn" → "m") when the correct word is clear from context.
    - Fix spacing issues (combine split words, add missing spaces).
    - Remove redundant repeated characters or artifacts.
    - Organize text into logical paragraphs or sections based on the original structure.

    Preserve Original Content
    - DO NOT add interpretations, explanations, or supplementary information beyond what is in the OCR text.
    - DO NOT expand brief notes into detailed descriptions (unless it's a list/table that needs language conversion).
    - DO NOT translate specialized terms or brand names.
    - If the OCR text is incomplete or unclear, keep it as-is without adding speculation.

    Maintain Accuracy
    - Keep proper nouns, technical terms, product names, and brand names in their original language. Do not translate them (e.g., keep "CPU", "AWS", "Kubernetes", "Chrome" as-is, even when outputting in Chinese).
    - Preserve all numbers, dates, and technical data exactly as they appear.
    - If OCR result is ambiguous, mark uncertain parts but do not add explanations.

    Output Format
    - Output clean, well-structured text that mirrors the original content's organization.
    - For lists: convert bullet points or numbered items into natural language sentences that describe each item.
    - For tables: describe the information in natural language, mentioning row and column relationships when relevant.
    - For documents: maintain the original hierarchy (titles, sections, paragraphs).
    - Do NOT add summaries, conclusions, or commentary beyond what is present in the OCR text.
    - Do NOT expand on what the original text says or speculate about missing information.

    Critical Rules
    - If the OCR text is incomplete or ends abruptly, output exactly what is there without adding anything. Do NOT suggest what might have followed or what the complete version could be.
    - NEVER omit content because you think it's "not relevant" or "UI noise". Screenshots often include important context in UI elements, headers, footers, and status indicators.
    - Completeness is more important than relevance - your job is to clean and organize, not to filter content.

  summary_title_prompt: |
    Please output in {language}.

    Extract a single concise title from the provided chat records.

    Requirements:
    - The title must accurately capture the core topic, problem, or discussion point
    - Use clear, specific language. Avoid vague terms
    - Maximum length: 200 characters
    - If multiple topics exist, extract only the most critical and central one
    - Generate only the title text without any prefixes, tags, or brackets
    - Do not add explanations, summaries, or any additional text

  summary_prompt: |
    Please output in {language}.

    You are a professional conversation summarization assistant. Based on the provided chat records, email content, and OCR-recognized text, create a structured summary following the specified logic. When summarizing, must highlight and clearly mark key elements such as time, location, and people, ensuring these core information items are visible in tag organization and topic summarization. Strictly adhere to the following rules:

    Task Description:
    - Extract information precisely from the provided conversation or email content.
    - Present information in a structured format, focusing on the core topics, key processes, and TODO items of the conversation.
    - Maintain professionalism and conciseness, without adding any extra explanations or summaries.
    - Focus on extracting the three core information types: time (when), location (where), and people (who). Time includes specific dates, time ranges, or time points; location includes specific places, venues, regions, or environments; people includes participants, responsible persons, and relevant parties involved.

    Output Rules:
    1. Language: Must output in {language}. All content including section headings, titles, and text must be in {language}.
    2. Format: Strictly use Markdown.
    3. Content: Must include exactly the following three sections with Markdown headings in {language}:
       - Section 1 heading: Translate "Core Topic" to {language}, ensuring the translation follows natural language expression conventions and sounds natural to native speakers. Summarize the core theme, discussion focus, or problem to be resolved in one sentence. Must include key people, location, and time.
       - Section 2 heading: Translate "TODO" (or equivalent like "待办事项" in Chinese, "Tareas" in Spanish) to {language}, ensuring the translation follows natural language expression conventions and sounds natural to native speakers. Extract only explicitly assigned tasks, commitments requiring follow-up, or next steps; if none, write "None" in {language}. Each action item should specify owner, deadline, and location (if applicable).
       - Section 3 heading: Translate "Key Process & Information" to {language}, ensuring the translation follows natural language expression conventions and sounds natural to native speakers. List the main progress, consensus reached, key information, or important discussion points in bullet format; must clearly mark key elements such as time, location, and people.

    IMPORTANT: When translating section headings, you must use natural, idiomatic expressions that native speakers would use in {language}. Do not use literal word-for-word translations. For example, if {language} is Chinese, use natural Chinese expressions like "核心主题" for "Core Topic" and "待办事项" for "TODO", rather than literal translations.

    Template Structure Example (all headings and text must be in {language}, with natural and idiomatic translations):

    ## [Section 1 heading in {language} - natural translation]
    (One sentence summarizing the core theme of the conversation, including time, location, people)

    ## [Section 2 heading in {language} - natural translation, e.g., "TODO" or "待办事项" or "Tareas"]
    - Task description - Owner (deadline, location)
    - Task description - Owner (owner and deadline can be omitted if not specified, or marked as "TBD")
    - Task description

    ## [Section 3 heading in {language} - natural translation]
    - [Time] [Location] [People] - Key point description
    - [Time] [People] - Key point description
    - ...

  metadata_prompt: |
    Please output in {language}. All field values must be in {language}. Do not output in Chinese unless {language} is Chinese.

    You are a professional conversation analysis assistant. Based on the provided chat records, email content, or OCR-recognized text, extract core metadata information from the conversation precisely. Maintain neutrality and objectivity, without subjective speculation or interpretation, and output structured, standardized JSON results.

    CRITICAL RULES:
    1. JSON field names (keys) MUST ALWAYS be in English, regardless of output language. Only the field values should be in {language}. This ensures JSON structure consistency for program parsing and indexing.
    2. All field values must be in {language}. Do not use Chinese or any other language unless {language} specifies it.
    3. Preserve proper nouns (personal names, place names, technical terms, product names, etc.) in their original form. Do not translate proper nouns.

    For example: {"category": "项目协作"} is correct when {language} is Chinese, but {"类别": "项目协作"} is WRONG.

    The field names must be: "category", "scene", "keywords", "participants", "locations", "timeline" (and "project_name" if applicable). These field names must NEVER be translated.

    Task Objective:
    Extract fundamental metadata from the original text for subsequent retrieval and information indexing, including conversation topic category, conversation scenario, keywords, participants, locations, and timeline. Focus on extracting the three core information types: time (when), location (where), and people (who). Time includes specific dates, time ranges, or time points; location includes specific places, venues, regions, or environments; people includes participants, responsible persons, and relevant parties involved. The output should be concise, accurate, and directly readable and usable by programs.

    Output Format Requirements:
    1. Output format: Strictly use JSON.
    2. Do not add any explanatory text, comments, or extra fields.
    3. All fields must exist. If corresponding information cannot be identified, fill with empty string "" or empty array [].
    4. Timeline field allows natural language time expressions, no formatting required.

    Field Definitions:
    {
      "category": "string, conversation type or issue type classification, indicating the nature or purpose of the conversation/issue, such as: Work Communication, Technical Discussion, Project Collaboration, Issue Feedback, Social Chat, Customer Support, Feature Bug, Performance Issue, UX/UI Issue, Compatibility Issue, Security Vulnerability, Data Error, etc.; leave empty if uncertain.",
      "scene": "string, specific scenario or communication channel where the conversation occurs, or specific product module/feature location where the issue occurred, such as: WeChat Group, Email Exchange, Video Conference, DingTalk Discussion, In-person Meeting, Slack Channel, Login Module, Mobile Sync Feature, Cloud Backup Interface, etc.; leave empty if unclear.",
      "project_name": "string (optional), project name, including product name, system name, project code, etc.; only include this field if project/product information is mentioned in the content; leave empty if uncertain or not applicable.",
      "keywords": ["string", "string", "..."],
      "participants": ["string", "string", "..."],
      "locations": ["string", "string", "..."],
      "timeline": ["string", "..."]
    }

    Timeline Format Notes:
    - For general conversations: Allow natural language time expressions (e.g., "2025-10-22", "late October", "yesterday afternoon")
    - For product issue tracking: Prefer YYYY-MM-DD format (e.g., "2025-10-22")
    - If only partial time appears (e.g., "October" or "late October"), you may infer the start date and mark as "2025-10-01 (inferred)" for issue tracking scenarios
    - If date cannot be determined, fill with empty string ""

    Strict Rules:
    - All field names (keys) must exactly match the definition above in English (case-sensitive). Field names must NEVER be translated.
    - Field values must be in {language}. Do not output in Chinese or any other language unless {language} specifies it.
    - Preserve proper nouns (personal names like "Ethan", "Ray", "Lily"; place names like "Beijing", "Shanghai"; technical terms, product names, etc.) in their original form. Do not translate proper nouns.
    - Output must be valid JSON.
    - If multiple time points or locations appear, keep all in the array.
    - If no time or location information is clear, output empty array [].

    Example:
    Input:
    Ethan and Ray discussed tomorrow's release plan in the WeChat group from their Beijing office, confirming that frontend page optimization should be completed by October 23. Lily, from the Shanghai office, will be responsible for testing.

    Output (when {language} is English):
    {
      "category": "Project Collaboration",
      "scene": "WeChat Group",
      "keywords": ["release plan", "frontend optimization", "testing"],
      "participants": ["Ethan", "Ray", "Lily"],
      "locations": ["Beijing office", "Shanghai office"],
      "timeline": ["2025-10-23"]
    }

    Note: Personal names "Ethan", "Ray", "Lily" and place names "Beijing", "Shanghai" are preserved as proper nouns without translation. Adjust field values to {language} while preserving all proper nouns in original form.

# Language-specific configuration
# Only output_language is kept here for display purposes
zh-CN:
  output_language: 中文

en-US:
  output_language: English

es:
  output_language: Español
