[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["devify"]

[project]
name = "devify"
version = "0.1.0"
description = "Django starter template"
authors = [{name = "Ray Sun", email = "xiaoquqi@gmail.com"}]
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "django==5.1.4",
    "djangorestframework==3.15.2",
    "djangorestframework-simplejwt==5.3.1",
    "djangorestframework-camel-case==1.4.2",
    "dj-rest-auth[with_social]==7.0.0",
    "django-cors-headers>=4.3.1",
    "drf-spectacular",
    "python-dotenv",
    "dj-database-url==2.3.0",
    "mysqlclient==2.1.1",
    "celery==5.3.1",
    "django-celery-beat==2.7.0",
    "django-celery-results",
    "flower==2.0.1",
    "redis",
    "gunicorn==20.1.0",
    "beautifulsoup4>=4.12.0",
    "flanker>=0.9.11",
    "email-validator==2.1.1",
    "python-magic>=0.4.27",
    "django-json-widget>=1.1.1",
    "PyYAML>=6.0",
    "devtoolbox[llm,ocr] @ git+https://github.com/cloud2ai/devtoolbox.git",
]

[project.optional-dependencies]
dev = [
    "nox>=2024.4.15",
    "ipdb==0.13.13",
    "ipython==8.29.0",
    "pytest>=8.0.0",
    "pytest-django>=4.9.0",
    "pytest-html>=4.1.0",
    "pytest-cov>=6.1.0",
    "pytest-mock>=3.14.0",
    "pytest-sugar>=1.0.0",
    "pytest-xdist>=3.0.0",
    "pytest-metadata>=3.1.0",
    "factory-boy>=3.3.1",
    "mock>=5.1.0",
    "faker>=33.1.0",
    "coverage>=7.6.8",
    "mkdocs>=1.6.1",
    "black>=24.0.0",
    "isort>=5.13.0",
    "flake8>=7.0.0",
    "mypy>=1.8.0",
    "django-stubs>=4.2.0",
]
test = [
    "pytest>=8.0.0",
    "pytest-django>=4.9.0",
    "pytest-cov>=6.1.0",
    "factory-boy>=3.3.1",
]


[tool.pytest.ini_options]
testpaths = ["devify/threadline/tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--color=yes",
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "functional: marks tests as functional tests",
    "html_parsing: marks tests related to HTML parsing functionality",
    "django_db: marks tests that require database access",
    "auth: marks tests related to authentication",
    "performance: marks tests as performance tests",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]

# Coverage configuration
[tool.coverage.run]
source = ["threadline"]
omit = [
    "*/tests/*",
    "*/migrations/*",
    "*/__pycache__/*",
    "*/venv/*",
    "*/env/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

# Note: Code quality tools (black, isort, mypy) configurations removed
# Install them separately if needed: pip install black isort mypy