services:
  devify-api:
    image: registry.cn-beijing.aliyuncs.com/cloud2ai/devify:latest
    container_name: devify-api
    restart: unless-stopped
    build:
      context: .
      dockerfile: Dockerfile
      args:
        USE_MIRROR: ${USE_MIRROR:-false}
    env_file:
      - ./.env
    volumes:
      - ./data/django/staticfiles:/opt/devify/core/staticfiles
      - ./cache:/opt/cache
      - ./data/logs/api:/var/log/gunicorn
      - ./devify:/opt/devify
      - ./data/email_attachments:/opt/email_attachments
    networks:
      - devify_network
    depends_on:
      - mysql
    command: gunicorn
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:8000/health"]
      interval: 30s
      timeout: 5s
      retries: 3
      start_period: 60s

  devify-worker:
    image: registry.cn-beijing.aliyuncs.com/cloud2ai/devify:latest
    container_name: devify-worker
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./cache:/opt/cache
      - ./data/logs/worker:/var/log/celery
      - ./devify:/opt/devify
      - ./data/email_attachments:/opt/email_attachments
    networks:
      - devify_network
    depends_on:
      devify-api:
        condition: service_started
      mysql:
        condition: service_started
      redis:
        condition: service_started
    command: celery

  devify-scheduler:
    image: registry.cn-beijing.aliyuncs.com/cloud2ai/devify:latest
    container_name: devify-scheduler
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./data/logs/scheduler:/var/log/celery
      - ./devify:/opt/devify
    networks:
      - devify_network
    depends_on:
      devify-api:
        condition: service_started
      mysql:
        condition: service_started
      redis:
        condition: service_started
    command: celery-beat

  # Recommend to use nginx proxy manager to manage the outside access
  nginx:
    image: nginx:latest
    container_name: devify-nginx
    restart: unless-stopped
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/certs:/certs
      - ./data/django/staticfiles:/staticfiles:ro
      - ./data/logs/nginx:/var/log/nginx
    ports:
      - "${NGINX_HTTP_PORT:-10080}:80"
      - "${NGINX_HTTPS_PORT:-10443}:443"
    networks:
      - devify_network
    depends_on:
      devify-api:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "nginx", "-t"]
      interval: 30s
      timeout: 10s
      retries: 3

  mysql:
    image: mariadb:11.6
    container_name: devify-mariadb
    restart: unless-stopped
    env_file:
      - ./.env
    volumes:
      - ./docker/mysql/etc/my.cnf:/etc/mysql/my.cnf
      - ./docker/mysql/initdb.d:/docker-entrypoint-initdb.d
      - ./data/mysql/data:/var/lib/mysql
      - ./data/logs/mysql:/var/log/mysql
    networks:
      - devify_network

  redis:
    image: redis:alpine
    container_name: devify-redis
    restart: unless-stopped
    command: redis-server
    volumes:
      - ./data/redis:/data
      - ./data/logs/redis:/var/log/redis
    networks:
      - devify_network

networks:
  devify_network:
    driver: bridge
